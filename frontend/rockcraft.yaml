# Dockerfile: https://github.com/kubeflow/pipelines/blob/2.4.0/frontend/Dockerfile
name: frontend
base: ubuntu@22.04
version: '2.4.0'
summary: Kubeflow Pipelines Management Frontend
description: |
    This rock runs a frontend development server.
license: Apache-2.0
platforms:
    amd64:
run-user: _daemon_
services:
  ml-pipeline-ui:
    # Command is different than the upstream one due to the `daemon` user not having
    # access to the `~/..` directory. Thus, we should update charm's command when integrating
    # this rock.
    command: node /server/dist/server.js /client/ 3000
    override: replace
    startup: enabled
    environment:
      API_SERVER_ADDRESS: http://localhost:3001
parts:
  security-team-requirement:
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/rocks
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && \
      dpkg-query --root=${CRAFT_PROJECT_DIR}/../bundles/ubuntu-22.04/rootfs/ -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) \
      > ${CRAFT_PART_INSTALL}/usr/share/rocks/dpkg.query

  # This part builds the client side of the frontend container image
  frontend:
    plugin: nil
    source: https://github.com/kubeflow/pipelines.git
    source-tag: 2.4.0
    override-build: |
        curl -s "https://nodejs.org/dist/v22.13.1/node-v22.13.1-linux-x64.tar.gz" | tar --strip-components=1 -xzf - -C "/usr"
        # Change working directory to pipelines/frontend
        cd frontend
        npm ci && npm run postinstall
        npm run build
        # Create a client directory in root and copy the build directory into it
        mkdir -p ${CRAFT_PART_INSTALL}/client
        cp -a build/* ${CRAFT_PART_INSTALL}/client

  # This part builds the server side of the frontend container image
  backend:
    plugin: nil
    source: https://github.com/kubeflow/pipelines.git
    source-tag: 2.4.0
    override-build: |
        curl -s "https://nodejs.org/dist/v22.13.1/node-v22.13.1-linux-x64.tar.gz" | tar --strip-components=1 -xzf - -C "/usr"
        # Change working directory to pipelines/frontend
        cd ./frontend
        mkdir -p ./server/dist
        export BUILD_VERSION=$(git describe --abbrev=0 --tags)
        export BUILD_COMMIT=$(git rev-parse HEAD)
        export BUILD_DATE=$(date "+%F-%H-%M-%S")
        echo $BUILD_COMMIT > ./server/dist/COMMIT_HASH
        echo $BUILD_DATE > ./server/dist/BUILD_DATE
        echo $BUILD_VERSION > ./server/dist/TAG_NAME

        # Generate the dependency licenses files (one for the UI and one for the webserver),
        # concatenate them to one file under ./src/server
        ./scripts/yarn-licenses.sh

        # Create a server directory in root and copy the server directory into it
        cp -r server ${CRAFT_PART_INSTALL}/
        cd ${CRAFT_PART_INSTALL}/server/
        npm ci
        npm run build

  install-node:
    plugin: nil
    override-build: |
      curl -s "https://nodejs.org/dist/v22.13.1/node-v22.13.1-linux-x64.tar.gz | tar --strip-components=1 -xzf - -C "${CRAFT_PART_INSTALL}"
